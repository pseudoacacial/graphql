// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package generated

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// GetUsersResponse is returned by GetUsers on success.
type GetUsersResponse struct {
	// fetch data from the table: "user"
	User []*GetUsersUser `json:"user"`
}

// GetUser returns GetUsersResponse.User, and is useful for accessing the field via an interface.
func (v *GetUsersResponse) GetUser() []*GetUsersUser { return v.User }

// GetUsersUser includes the requested fields of the GraphQL type user.
// The GraphQL type's documentation follows.
//
// columns and relationships of "user"
type GetUsersUser struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns GetUsersUser.Id, and is useful for accessing the field via an interface.
func (v *GetUsersUser) GetId() string { return v.Id }

// GetName returns GetUsersUser.Name, and is useful for accessing the field via an interface.
func (v *GetUsersUser) GetName() string { return v.Name }

func GetUsers(
	ctx context.Context,
	client graphql.Client,
) (*GetUsersResponse, error) {
	req := &graphql.Request{
		OpName: "GetUsers",
		Query: `
query GetUsers {
	user {
		id
		name
	}
}
`,
	}
	var err error

	var data GetUsersResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
